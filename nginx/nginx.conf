worker_processes  2; # 프로세서 개수
error_log logs/error.log warn; # 에러가 저장되는 장소 및 에러 출력 level
events {
  worker_connections 1024;

  # 각 worker process 별 최대 허용 connection 개수, 각 core 별로 file을 한번에 open할 수 있는 number로 세팅(ulimit -n 으로 알 수 있음)
  # worker_processes * worker_connections = max connections
}

http {
  more_clear_headers 'Server';   # Nginx 기본 설정으로 Server 헤더가 붙는 데 보통 보안상 이유로 제거
  log_format  main '$remote_addr ' # 접속자의 IP
  '$remote_user [$time_local] $request $status $body_bytes_sent '
  '$http_referer $http_user_agent $http_x_forwarded_for '
  '$request_time ' # Full request time, starting when NGINX reads the first byte from the client and ending when NGINX sends the last byte of the response body
  '$upstream_response_time ' # Time between establishing a connection to an upstream server and receiving the last byte of the response body
  '$upstream_connect_time ' # Time spent establishing a connection with an upstream server
  access_log logs/access.log main;
  keepalive_timeout 65;

  upstream asset {
    server 172.17.0.1:10000;
    keepalive 500;   # keepalive connection 최대 수
  }


  server {
    listen 80;
    server_name localhost;  # server 블록의 호스트명
    client_max_body_size 5m;

    location / {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE';
      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
      proxy_pass http://asset;
    }
  }
}
